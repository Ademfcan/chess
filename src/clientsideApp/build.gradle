plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'java'
}

javafx {
    version = "20"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.media' ]
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.nd4j:nd4j-native-platform:1.0.0-beta7'
    implementation 'org.datavec:datavec-api:1.0.0-beta7'
    implementation 'org.glassfish.tyrus.bundles:tyrus-standalone-client:2.1.5'


    implementation project(':serverside')
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

run {
    jvmArgs '-ea',
            '-Dprism.allowhidpi=false',
            '-Dsun.java2d.dpiaware=false',
            '-Djavafx.preloader=chessengine.SplashScreen'
}


application {
    mainClass = 'chessengine.Main'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    archiveClassifier.set('fat')
    manifest {
        attributes(
                'Main-Class': 'chessengine.Main',
                'Class-Path': configurations.runtimeClasspath.asFileTree.files.collect { "lib/${it.name}" }.join(' '),
                'Application-Args': '-Dprism.allowhidpi=false -Dsun.java2d.dpiaware=false','-Djavafx.preloader=chessengine.SplashScreen'
        )
    }
    from {
        configurations.runtimeClasspath.asFileTree.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveFileName = 'chessengine-fat.jar'

    from sourceSets.main.output

}

